# Generated by Django 4.2 on 2024-05-14 00:33

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import jsonfield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('books', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, primary_key=True, serialize=False, unique=True)),
                ('dni', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('telephone', models.CharField(max_length=12, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('province', models.CharField(max_length=50)),
                ('city', models.CharField(max_length=50)),
                ('address', models.CharField(max_length=50)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Editorial',
            fields=[
                ('id_Editorial', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='Anagrama', max_length=100)),
            ],
            options={
                'verbose_name': 'Editorial',
                'verbose_name_plural': 'Editoriales',
                'db_table': 'editorial',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id_Genre', models.AutoField(primary_key=True, serialize=False)),
                ('genre', models.EmailField(default='Novela', max_length=100)),
            ],
            options={
                'verbose_name': 'Género',
                'verbose_name_plural': 'Géneros',
                'db_table': 'genre',
            },
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id_Order_Status', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('Pendiente', 'Pending'), ('Pago aprobado', 'Paid'), ('En preparación', 'Preparing'), ('Enviado', 'Sent'), ('Recibido', 'Received')], default='Pendiente', max_length=15)),
            ],
            options={
                'verbose_name': 'Estado de la orden',
                'verbose_name_plural': 'Estados de las órdenes',
                'db_table': 'OrderStatus',
            },
        ),
        migrations.AlterModelOptions(
            name='author',
            options={'verbose_name': 'Autor', 'verbose_name_plural': 'Autores'},
        ),
        migrations.AlterModelOptions(
            name='book',
            options={'verbose_name': 'Libro', 'verbose_name_plural': 'Libros'},
        ),
        migrations.RemoveField(
            model_name='book',
            name='genre',
        ),
        migrations.AlterField(
            model_name='book',
            name='id_Author',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.author'),
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id_Order', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('books', jsonfield.fields.JSONField()),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('books_amount', models.IntegerField()),
                ('id_Order_Status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.orderstatus')),
                ('id_User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Orden',
                'verbose_name_plural': 'Órdenes',
                'db_table': 'Order',
            },
        ),
        migrations.AddField(
            model_name='book',
            name='id_Editorial',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.editorial'),
        ),
        migrations.AddField(
            model_name='book',
            name='id_Genre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='books.genre'),
        ),
    ]
